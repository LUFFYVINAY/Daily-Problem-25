class Solution {
    public int minOperations(int[] nums, int k) {
        PriorityQueue<Long> pq = new PriorityQueue<>();
        long count =0;
        for(int i=0;i<nums.length;i++){
            pq.offer((long)nums[i]);
        }

        while(!pq.isEmpty() &&pq.size()>1){
            long x = pq.poll();
            long y = pq.poll();

            if(x < k || y< k){
                long current = (long)Math.max(x,y) + 2*(long)Math.min(x,y);
                pq.offer(current);
                count++;
            }
            else{
                pq.offer(x);
                pq.offer(y);
                break;
            }

        }
        return (int)count;
    }
}
