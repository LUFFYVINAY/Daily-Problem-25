class Solution {
    public boolean canBeValid(String s, String locked) {
        int length = s.length();
        if(length%2==1){
            return false;
        }

        Stack<Integer> open = new Stack<>();
        Stack<Integer> unlock = new Stack<>();

        for(int i=0;i<length;i++){
            if(locked.charAt(i)=='0'){
                unlock.push(i);
            }
            else if(s.charAt(i)=='('){
                open.push(i);
            }
            else if(s.charAt(i)==')'){
                if(!open.empty()){
                    open.pop();
                }
                else if(!unlock.empty()){
                    unlock.pop();
                }
                else{
                    return false;
                }
            }
        }
        while(!open.empty()&& !unlock.empty() && open.peek()<unlock.peek()){
            open.pop();
            unlock.pop();
        }
         if (!open.empty()) {
            return false;
        }

        return true;
    }
}
