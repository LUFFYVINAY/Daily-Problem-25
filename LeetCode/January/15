class Solution {
    public int minimizeXor(int num1, int num2) {
        int setnum2 = numberOfSetBits(num2);  
        int setnum1 = numberOfSetBits(num1);  

        if (setnum1 == setnum2) {
            return num1;
        }

        int result = num1;

        if (setnum1 > setnum2) {
            int bitsToTurnOff = setnum1 - setnum2;
            for (int i = 0; i < 32 && bitsToTurnOff > 0; i++) {
                if ((result & (1 << i)) != 0) {  
                    result &= ~(1 << i);  
                    bitsToTurnOff--;
                }
            }
        } else {
            int bitsToTurnOn = setnum2 - setnum1;
            for (int i = 0; i < 32 && bitsToTurnOn > 0; i++) {
                if ((result & (1 << i)) == 0) {  
                    result |= (1 << i);  
                    bitsToTurnOn--;
                }
            }
        }

        return result;
    }

    private int numberOfSetBits(int n) {
        int count = 0;
        while (n > 0) {
            count += (n & 1);
            n >>= 1;
        }
        return count;
    }
}
